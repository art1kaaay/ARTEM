from math import log2, ceil

def read_file(filename):
with open(filename) as file:
return file.read().strip()

def write_file(filename, content):
with open(filename, "w") as file:
file.write(content)

def calculate_parity_bits(data_sequence):
parity_bits = ""
for i in range(ceil(log2(len(data_sequence)))):
parity = 0
for j in range(len(data_sequence)):
if (j + 1) & (2**i) != 0:
parity ^= int(data_sequence[j])
parity_bits += str(parity)

return parity_bits

def detect_error(received_data):
error_position = 0
for i in range(ceil(log2(len(received_data)))):
parity = 0
for j in range(len(received_data)):
if (j + 1) & (2**i) != 0:
parity ^= int(received_data[j])
if parity != 0:
error_position += 2**i

if error_position != 0:
data_list = list(received_data)
data_list[error_position - 1] = str(1 - int(data_list[error_position - 1]))
received_data = "".join(data_list)

return received_data, error_position

if name == "main":
input_data = read_file("input")
output_data = input_data + calculate_parity_bits(input_data)
print("Контрольные биты: ", output_data)
write_file("output", output_data)

received_data = read_file("received")
corrected_data, error_position = detect_error(received_data)

if error_position != 0:
print(f"Ошибка в позиции {error_position}")
write_file("output", corrected_data)
else:
print("Всё нормально")
